use HC_RISK;

ALTER TABLE dbo.application_train
DROP COLUMN
NAME_TYPE_SUITE,
NAME_INCOME_TYPE,
NAME_HOUSING_TYPE,
REGION_POPULATION_RELATIVE,
DAYS_REGISTRATION,
DAYS_ID_PUBLISH,
OWN_CAR_AGE,
FLAG_MOBIL,
FLAG_EMP_PHONE,
FLAG_WORK_PHONE,
FLAG_CONT_MOBILE,
FLAG_PHONE,
FLAG_EMAIL,
OCCUPATION_TYPE,
REGION_RATING_CLIENT,
REGION_RATING_CLIENT_W_CITY,
WEEKDAY_APPR_PROCESS_START,
HOUR_APPR_PROCESS_START,
REG_REGION_NOT_LIVE_REGION,
REG_REGION_NOT_WORK_REGION,
LIVE_REGION_NOT_WORK_REGION,
REG_CITY_NOT_LIVE_CITY,
REG_CITY_NOT_WORK_CITY,
LIVE_CITY_NOT_WORK_CITY,
ORGANIZATION_TYPE,
EXT_SOURCE_1,
EXT_SOURCE_2,
EXT_SOURCE_3,
APARTMENTS_AVG,
BASEMENTAREA_AVG,
YEARS_BEGINEXPLUATATION_AVG,
YEARS_BUILD_AVG,
COMMONAREA_AVG,
ELEVATORS_AVG,
ENTRANCES_AVG,
FLOORSMAX_AVG,
FLOORSMIN_AVG,
LANDAREA_AVG,
LIVINGAPARTMENTS_AVG,
LIVINGAREA_AVG,
NONLIVINGAPARTMENTS_AVG,
NONLIVINGAREA_AVG,
APARTMENTS_MODE,
BASEMENTAREA_MODE,
YEARS_BEGINEXPLUATATION_MODE,
YEARS_BUILD_MODE,
COMMONAREA_MODE,
ELEVATORS_MODE,
ENTRANCES_MODE,
FLOORSMAX_MODE,
FLOORSMIN_MODE,
LANDAREA_MODE,
LIVINGAPARTMENTS_MODE,
LIVINGAREA_MODE,
NONLIVINGAPARTMENTS_MODE,
NONLIVINGAREA_MODE,
APARTMENTS_MEDI,
BASEMENTAREA_MEDI,
YEARS_BEGINEXPLUATATION_MEDI,
YEARS_BUILD_MEDI,
COMMONAREA_MEDI,
ELEVATORS_MEDI,
ENTRANCES_MEDI,
FLOORSMAX_MEDI,
FLOORSMIN_MEDI,
LANDAREA_MEDI,
LIVINGAPARTMENTS_MEDI,
LIVINGAREA_MEDI,
NONLIVINGAPARTMENTS_MEDI,
NONLIVINGAREA_MEDI,
FONDKAPREMONT_MODE,
HOUSETYPE_MODE,
TOTALAREA_MODE,
WALLSMATERIAL_MODE,
EMERGENCYSTATE_MODE,
OBS_30_CNT_SOCIAL_CIRCLE,
DEF_30_CNT_SOCIAL_CIRCLE,
OBS_60_CNT_SOCIAL_CIRCLE,
DEF_60_CNT_SOCIAL_CIRCLE,
DAYS_LAST_PHONE_CHANGE,
FLAG_DOCUMENT_2,
FLAG_DOCUMENT_3,
FLAG_DOCUMENT_4,
FLAG_DOCUMENT_5,
FLAG_DOCUMENT_6,
FLAG_DOCUMENT_7,
FLAG_DOCUMENT_8,
FLAG_DOCUMENT_9,
FLAG_DOCUMENT_10,
FLAG_DOCUMENT_11,
FLAG_DOCUMENT_12,
FLAG_DOCUMENT_13,
FLAG_DOCUMENT_14,
FLAG_DOCUMENT_15,
FLAG_DOCUMENT_16,
FLAG_DOCUMENT_17,
FLAG_DOCUMENT_18,
FLAG_DOCUMENT_19,
FLAG_DOCUMENT_20,
FLAG_DOCUMENT_21,
AMT_REQ_CREDIT_BUREAU_HOUR,
AMT_REQ_CREDIT_BUREAU_DAY,
AMT_REQ_CREDIT_BUREAU_WEEK,
AMT_REQ_CREDIT_BUREAU_MON,
AMT_REQ_CREDIT_BUREAU_QRT,
AMT_REQ_CREDIT_BUREAU_YEAR
;


WITH PREV_APPS AS
(
select
	SK_ID_CURR,
	COUNT(DISTINCT SK_ID_PREV) AS CNT_PREV_APPS
from dbo.previous_application
GROUP BY
SK_ID_CURR
)
,
PREV_DPD AS 
(
select
	SK_ID_CURR,
	MAX(SK_DPD_DEF) AS MAX_PREV_DPD
from dbo.POS_CASH_balance
group by SK_ID_CURR
),
SUMM AS (
SELECT
	att.*,
	prev_apps.CNT_PREV_APPS,
	prev_dpd.MAX_PREV_DPD
from dbo.application_train att
inner join prev_apps 
	on att.SK_ID_CURR = PREV_APPS.SK_ID_CURR
inner join prev_dpd 
	on att.SK_ID_CURR = prev_dpd.SK_ID_CURR
)
, TRAIN_FF AS (
SELECT 
	TF.SK_ID_CURR,
	TF.TARGET,
	CASE 
		WHEN TF.NAME_CONTRACT_TYPE = 'Cash loans' THEN 1 ELSE 0 
	END AS FLAG_CASH_LOAN,
	CASE 
		WHEN TF.CODE_GENDER = 'F' THEN 1 ELSE 0 
	END AS CODE_FEMALE,
	CASE 
		WHEN TF.FLAG_OWN_CAR = 'Y' THEN 1 ELSE 0 
	END AS FLAG_OWN_CAR,
	CASE 
		WHEN TF.FLAG_OWN_REALTY = 'Y' THEN 1 ELSE 0 
	END AS FLAG_OWN_RESTATE,
	TF.CNT_CHILDREN,
	TF.AMT_INCOME_TOTAL,
	TF.AMT_CREDIT,
	TF.AMT_ANNUITY AS AMT_PAYMENT,
	TF.AMT_GOODS_PRICE AS AMT_ITEM_PRICE,
	CASE 
		WHEN TF.NAME_EDUCATION_TYPE IN ('Academic degree', 'Higher education') THEN 1 ELSE 0 
	END AS FLAG_EDU_HIGHER,
	CASE 
		WHEN TF.NAME_EDUCATION_TYPE IN ('Incomplete higher', 'Secondary / secondary special') THEN 1 ELSE 0 
	END AS FLAG_EDU_SEC,
	CASE 
		WHEN TF.NAME_FAMILY_STATUS = 'Married' THEN 1 ELSE 0 
	END AS FLAG_MS_MARRIED,
	CASE 
		WHEN TF.NAME_FAMILY_STATUS = 'Separated' THEN 1 ELSE 0 
	END AS FLAG_MS_SEP,
	CASE 
		WHEN TF.NAME_FAMILY_STATUS = 'Civil marriage' THEN 1 ELSE 0 
	END AS FLAG_MS_CM,
	CASE 
		WHEN TF.NAME_FAMILY_STATUS = 'Single / not married' THEN 1 ELSE 0 
	END AS FLAG_MS_SINGLE,
	TF.DAYS_BIRTH * -1 AS DAYS_AGE,
	CASE 
		WHEN TF.DAYS_EMPLOYED = 365243 THEN 0 ELSE TF.DAYS_EMPLOYED * -1 
	END AS DAYS_EMPLOYED,
	TF.CNT_FAM_MEMBERS,
	TF.CNT_PREV_APPS,
	TF.MAX_PREV_DPD AS DAYS_PREV_DPD
FROM DBO.SUMM TF
)
SELECT 
	* 
INTO DBO.FINAL_DATA FROM TRAIN_FF
;

